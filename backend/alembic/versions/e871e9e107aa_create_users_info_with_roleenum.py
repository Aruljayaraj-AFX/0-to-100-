"""create users_info with roleenum

Revision ID: e871e9e107aa
Revises: 39b72b026f45
Create Date: 2025-09-20 08:13:38.641381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e871e9e107aa'
down_revision: Union[str, Sequence[str], None] = '39b72b026f45'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('teacher_profile_email_key'), 'teacher_profile', type_='unique')
    op.drop_column('teacher_profile', 'email')
    op.drop_constraint(op.f('users_profile_email_key'), 'users_profile', type_='unique')
    op.drop_column('users_profile', 'email')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users_profile', sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('users_profile_email_key'), 'users_profile', ['email'], postgresql_nulls_not_distinct=False)
    op.add_column('teacher_profile', sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('teacher_profile_email_key'), 'teacher_profile', ['email'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
